项目练习

项目的注意事项和开发流程
项目工具的介绍和推荐

电子词典项目
httpserver + framework 第三版

pip的使用
pdb调试
httpserver模块



什么是项目 ： 有一定的完整性功能的代码集合

软件项目开发流程

需求分析 --》 概要设计 --》项目规划 --》 详细设计 
                                     --》 编码测试 
--》 项目功能测试 --》 调试完善 --》 项目发布 
--》后期维护

需求分析 ： 确定用户的真实项目需求

1. 确定用户的真实需求，项目的基本功能
2. 确定项目的整体难度和可行性分析
3. 需求分析文档，用户确认

概要设计 ： 对项目整体进行分析，确定初步的技术方向

1. 确定整体架构
2. 确定功能模块
3. 规划使用技术，对技术可行性分析
4. 编写项目的开发流程图和概要设计文档

项目规划: 确定项目开发时限，时间节点，重要里程碑

1. 确定开发的先后顺序
2. 确定时间轴和里程碑
3. 人员的分工合作
4. 形成甘特图和思维导图

详细设计和项目编码

1. 写代码，包括数据库 网络环境等
2. 技术攻关
3. 完成详细设计文档
   思路，技术说明，代码说明，数据结构说明，环境约束等等
4. 代码的自我检测

项目测试

1. 完成项目测试
2. 编写测试报告
3. 项目完善

项目发布
1. 项目部署提交给有用户使用
2. 完成项目说明文档

后期维护升级
1. 项目的维护
2. 项目升级

注意事项
1. 按时完成项目是首要工作
2. 有规划实施会事半功倍
3. 及时解决项目冲突
4. 切忌追求完美，先完成基本功能再完善

项目工具推荐

编写文档 ： word  ppt   excel  markdown  LaTex
项目流程图 ： Mindmanage  Xmind   Visio
项目管理： project
代码管理： git  svn
编译工具： pycharm  vim  Webstream  eclipse  vscode

电子词典

功能说明：
1. 用户可以登录和注册
   登录凭借用户名密码即可
   注册要求用户必须填写用户名和密码其他内容自定
   用户名要求不能够重复

2. 用户数据要求使用数据库长期保存
   数据报自定

3. 能够满足多个用户同时登陆操作的需求

4. 功能分为客户单和服务端，客户单主要发起请求，服务    端处理请求，用户启动客户端即进入一级界面
     登陆   注册   退出
5. 用户登录后即进入二级界面
     查单词   查看历史记录   退出
         单词本 ： 每行一个单词
	           单词和解释之间一定有空格
		   后面的单词一定比前面的大

     查单词 ： 输入单词，显示单词意思，可以循环查询。输入 ## 表示退出查词

     查看历史记录： 查看当前用户的历史查词记录
        name     word    time
      
     退出 ： 退出到一级界面，相当于注销


1. 确定技术点
   什么并发，什么套接字  什么数据库？  
   文件处理还是数据库查询？ 
   如果是数据库查询如何将单词存入数据库
   

2. 建立数据表
   建立几个表  每个表结构  表关系
	
   3     用户信息     历史记录        存单词  
   
         注册         查询历史记录    查单词
	 登录         查单词
         

3. 项目分析 仿照ftp和聊天室进行项目分析

4. 搭建通信框架

5. 分析有几个功能，如何封装，每个功能具体实现什么内    容

复习

git 分支操作
git 远程操作
github 使用

项目基础
   项目开发流程
   项目的注意事项

电子词典



项目分析

服务器 ： 登录  注册   查词   历史记录

客户端 ： 打印界面   发出请求    接收反馈   打印结果

技术点 :   并发   sys.fork
           套接字  tcp 套接字
	   数据库  mysql
	   查词    文本

工作流程： 创建数据库，存储数据 ---》 搭建通信框架，            建立并发关系---》实现具体功能封装

1. 创建数据库存储数据
   dict

   user ： id  name   passwd
   hist :  id  name   word   time
   words : id  word   interpret

   create database dict default charset=utf8;

   create table user (id int primary key auto_increment,name varchar(32) not null,passwd varchar(16) default '000000');

   create table hist(id int auto_increment primary key,name varchar(32) not null,word varchar(32) not null,time varchar(64));
   
   create table words (id int auto_increment primary key,word varchar(32) not null,interpret text not null);

2. 搭建基本框架
   
   服务器  创建套接字 ---》 创建父子进程 --》 子进程         等待处理客户单端请求--》父进程继续接收下         一个客户端连接

   客户端  创建套接字 --》发起连接请求 --》一级界面         --》请求（登录，注册，退出）--》登录成功         进入二级界面--》请求（查词，历史记录）

3. 功能实现
   注册   
      客户端
         1. 输入注册信息
	 2. 将注册信息发送给服务器
	 3. 得到服务器反馈

      服务端
         1. 接收请求
	 2. 判断是否允许注册
	 3. 将结果反馈给客户端
	 4. 注册信息插入数据库

cookie

 import  getpass
 
 passwd = getpass.getpass()
 功能 ： 隐藏密码输入


作业 ： 1. 电子词典项目 再过一下流程
        2. 复习httpserver 第二版
	3. 将电子词典上传到github





