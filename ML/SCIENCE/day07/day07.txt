Day07

2.快速傅里叶变换模块(fft)
任何一种周期信号都可以看成由若干不同振幅,频率的正弦信号叠加而成--傅里叶定理
任何周期函数都可以用正弦函数和余弦函数构成的无穷级数来表示--傅里叶级数
傅里叶变换就是把时空域里的函数映射到频率域,得到不同的频率所对应的振幅和初相位的正弦函数.

y = Asin(wx+fai)
w1 -> A1, f1
w2 -> A2, f2
...
(A, fai) = f(w)
signal = f(t) ---> f(w)
np.fft.fftfreq(采样数, 采样周期) -> 频率数组
np.fft.fft(采样数组) -> 能量数组
np.fft.ifft(能量数组) -> 采样数组
#用复数形式来表示(A, fai)=f(w),A就是向量的长度(模长),fai是夹角
代码: fft.py    filter.py


3.随机数模块(random)
1)二项分布			#每次尝试只有两种可能,成功或失败
numpy.random.binomial(n, p, size)
-> 返回包含size个随机数的数组,其中每个随机数来自n次尝试中的成功次数,每次尝试成功的概率为p.
猜硬币游戏:初始筹码1000,每轮猜9次,猜对5次或5次以上为赢,筹码加1,否则为输,筹码减1.模拟10000轮,记录筹码数的变化.
binomial(9, 0.5, 10000)
代码: bi.py

2)超几何分布
numpy.random.hypergeometric(ngood, nbad, nsample, size)
-> 返回包含size个随机数的数组,其中每个随机数来自随机抽取nsample个样本中好样本的个数,总样本中共有ngood个好样本,nbad个坏样本.
摸球球游戏:将25个好球和1个坏球放在一起,每轮摸出3个球,全为好球加1分,若有坏球则减6分.模拟100轮,记录分值的变化.
hypergeometric(25,1,3,100)
代码:hyper.py


3)正态分布
numpy.random.normal(size)
-> 返回包含size个随机数的数组,其中每个随机数服从标准正态分布规律,即平均值为0,标准差为1的正态分布
代码: norm.py


七.Numpy的专用函数
1.间接,联合排序
间接排序:获取排序样本的下标.
    下标: 0 1 2 3 4 5 6 7 8
原始序列: 8 2 3 1 7 4 6 5 9
直接排序: 1 2 3 4 5 6 7 8 9
间接排序: 3 1 2 5 7 6 4 0 8

姓名: 张三 李四 王五 赵六 陈七
成绩: 90    70   50   80  60
下标:  0    1    2    3    4
按成绩升序排序: 2 4 1 3 0
年龄: 20    30   30   20  40
按年龄升序排序: 3 0 2 1 4 	
#联合排序,以成绩的升序作为参考序列


numpy.lexsort((参考序列, 待排序列)) -> 索引序列

numpy.sort_complex(复数数组) 
-> 按实部的升序排列,实部相同的参考虚部的升序
代码: sort.py


2.最大值最小值
numpy.xxx
max/min
argmax/argmin
nanmax/nanargmin		#忽略nan的最大值,最小值
nanargmax/nanargmin
------------------
归纳:
max - 最大值
min - 最小值
arg - 间接,下标
nan - 忽略无效值(nan)
#如果不忽略无效值,则无效值即被视为无穷大值,也被视为无穷小值
代码:nan.py

3.有序插入
有序序列: [1, 2, 4, 5, 6, 8, 9]
被插序列: [7, 3]
求:将被插序列插入到有序序列的什么位置,结果还是有序的?
numpy.searchsorted(有序序列,被插序列) 
-> 插入位置的索引序列
numpy.insert(有序序列, 插入位置, 被插序列)
-> 插入后的结果
代码: insert.py


4.定积分
y = f(x)
 / b
 |   f(x)dx
/  a
import scipy.integrate as si
def f(x):
	y = ...x...
	return y
si.quad(f, a, b)[0] -> 定积分的值
#求积分的函数,(函数,积分下限,积分上限)
代码:integ.py


5.插值
import scipy.interpolate as si
si.interp1d(离散样本水平坐标,离散样本垂直坐标,
	kind=插值器种类) -> 返回一维插值器对象
参数: kind='cubic' 样条插值器
一维插值器对象(插值样本水平坐标)->返回插值样本垂直坐标
代码: inter.py


6.金融计算
1)绘制K线图
import mpl_finance as mf
mf.candlestick_ohlc(坐标图对象,日期和开高低收价格数组,
	K线实体部分宽度(0-1), 阳线颜色, 阴线颜色)
代码:k.py
