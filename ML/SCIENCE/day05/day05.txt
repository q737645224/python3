day05

9.线性预测
假设: 数据的变化符合线性规则.
1  2  3  4
60 70 80 90
基准周期: N=3, 越大稳定性越好,敏感度越差
a b c d e f    g?
aA+bB+cC = d \
bA+cB+dC = e | -> A, B, C -> g = dA+eB+fC
cA+dB+eC = f /
#假定线性规则成立,则必然存在A,B,C是的方程组成立
/a b c\		/A\	  /d\
|b c d | X  |B| = |e|		#矩阵和列向量的乘法
\c d e/		\C/   \f/
-------     ---   ---
   a         x     b
x = np.linalg.lstsq(a, b)	#线性代数模块,利用最小二乘法
g = dA+eB+fC = x b
2N -> 2N+1			#N是基准周期,前2N个数值要用来解方程组
代码: line.py

10.线性拟合		(求线性方程的系数)
kx + b = y
kx1 + b = y1
kx2 + b = y2
....
kxn + b = yn
写成:
/x1, 1\     /k\   /y1\
|x2, 1|  X  | | = |y2|
|...  |     \b/   |..|
\xn, 1/           \yn/
-------     ---   ----
   a         x      b
x = np.linalg.lstsq(a, b)
在金融里,线性拟合经常被用来做趋势的判断和压力支撑的分析
将每日的最高价,最低价,收盘价取算数平均值(作为基准价),
然后用这个基准价来做线性拟合得到趋势线,即趋势线的k,b
通过k的正负计算机可以判断趋势是上升还是下降,
再把每日的最高价,最低价连成线,得到压力位支撑位的趋势.
代码:trend.py


11.多项式拟合	(重点看)
泰勒级数展开:
用一个无穷级数表示一个可微函数.
实际上任何可微的函数,总可以用一个N次多项式函数来近似,
而比N次幂更高阶的部分可以作为无穷小量而被忽略不计.

y = f(x) = p0x^n + p1x^(n-1) + ... + pn
n -> oo
将[x0,x1,...xn]和[y0,y1,...yn]代入上式,得到n+1个关于
[p0,p1,...pn]的方程组,解之,即可求得[p0,p1,...pn]系数向量.
封装的函数:
np.ployfit(自变量数组, 函数值数组, 最高次幂(n))
-> [p0,p1,...pn]
np.ployval([p0,p1,...pn], x) -> y
np.polyder([p0,p1,...pn]) -> q #返回导函数系数数组
np.roots([p0,p1,...pn]) -> f(x)=0的根
代码: poly.py


12.裁剪,压缩和累乘
1)clip: 将超过或不及某个给定阈值的元素设定为阈值的值
2)compress: 根据给定的条件,筛选数组中的元素.
3)prod/cumprod: 用数组中的元素做累乘运算(仅显示最后结果/显示中间过程)
代码: ccp.py


13.相关性
方向: 正相关和反相关
程度: 强相关和弱相关
样本: a = [a1, a2, ..., an]
	  b = [b1, b2, ..., bn]
均值: ave(a) = (a1+a2+...+an)/n
	  ave(b) = (b1+b2+...+bn)/n
离差: dev(a) = [a1, a2, ..., an] - ave(a)
	  dev(b) = [b1, b2, ..., bn] - ave(b)
方差: var(a) = ave(dev(a)dev(a))
				= cov(a, a)
	  var(b) = ave(dev(b)dev(b))
	   			= cov(b, b)
标准差: std(a) = sqrt(var(a))
		std(b) = sqrt(var(b))
协方差: cov(a, b) = ave(dev(a)dev(b))
		cov(b, a) = ave(dev(b)dev(a))
两个离差同为正或同为负时,乘出的结果为正,协方差将是一个正数;反之为负数.
如果一会儿正,一会儿负,正负相抵,值会很小,所以值的大小表示相关性的强弱.

相关性矩阵:
  cov(a,a)	       cov(a, b)
------------     -------------
std(a)std(a)       std(a)std(b)

  cov(b,a)         cov(b, b)
------------     -------------
std(b)std(a)       std(b)std(b)
相关性矩阵:其主对角线上的值为1,辅对角线上的值相等,叫相关性系数,其正负表示两个随机量相关性的方向,其绝对值表示它们的相关程度.
相关性矩阵中,为了防止dev(a)波动过大而影响相关性强弱的判断,所以要除以标准差的平方,抵消掉波动性.
函数: np.corrcoef(a, b) -> 相关性矩阵
代码: corr.py


14.符号数组
[10 -10 -20 30 0 20 -10 -30 20]
[1   -1  -1  1 0  1  -1  -1  1]
符号数组函数:
np.sign(原数组) -> 由-1/0/1组成的符号数组

np.piecewise(原数组,[条件列表],[目标列表])
也可以用于产生符号数组.原数组中,满足条件列表中某个条件的元素用目标列表中对应的元素取代

OBV: On Balance Volume能量潮指标
收盘价高于开盘价的,把成交量算成正的,收盘价低于开盘价的,把成交量算成负的
通过正负看盈亏,通过大小看成交量的情况
代码: obv.py
