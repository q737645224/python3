项目
了解什么是项目
项目的开发流程

1. 电子词典
2. http服务器

pip的使用
pdb调试
httpserver模块

pdb调试
pip的使用
协程的认识
git管理工具的使用

*************************************
什么是项目： 有一定的完整性功能的代码集合

软件项目的开发流程

需求分析 ---》 概要设计 ---》项目规划 ---》 
详细设计---》 编码测试 ----》
 项目测试，调试修改 ---》项目发布----》 后期维护更新

需求分析 ： 确定用户的真实需求
  1. 确定用户的真实需求，即项目的基本功能
  2. 对项目的难度和可行性进行分析
  3. 完成需求分析文档，进行确认

概要设计 ： 对项目进行整体分析，初步确定技术方向
  1. 整体设计，确定项目架构
  2. 确定项目功能模块划分
  3. 规划使用技术，对技术可行性分析
  4. 编写项目概要设计文档，开发流程图

项目规划：确定项目开发时限，时间节点，重要里程碑
  1. 确定开发先后顺序
  2. 确定开发的时间轴和里程碑
  3. 人员的分工合作
  4. 完成甘特图和思维导图 指导开发

详细设计和项目编码
1.写代码，包括数据库 网络环境等
2.技术攻关
3.完成详细设计文档
  思路，技术说明，代码说明，数据结构说明，环境约束等
4.代码的自我检测   -------写代码自我检测



项目测试 :  对项目整体功能进行测试
  1.完成项目测试
  2.编写测试报告
  3.项目完善

  1. 跨平台性，是否符合环境，功能bug，压力测试
  2. 完成测试报告
  3. 根据测试结果修改bug

项目发布
  1.将项目提交给用户，进行发布使用
  2.完成项目使用文档

后期维护升级
  1.项目的维护
  2.项目的升级和功能的添加（维护报告，升级报告）

项目注意事项
1.按时完成项目开发是首要工作
2。有规划实施会事半功倍
3.及时解决项目冲突
4.切忌最求完美
3.无计划的实施必要带来后期更大的效率低下

项目开发工具
文档编写 ：   word  ppt  excel markdowm   LaTex
项目流程图 ： Mindmanager  Xmind（思维导图）  visio(流程图 ，逻辑实现)
项目管理：    project （甘特图）
代码管理工具：git   svn
编辑工具：  pycharm  Webstream  eclipse  
            sublime  vim   vscode  atom

电子词典

功能说明 ： 
  1. 用户可以登录注册
     登录凭借用户名密码即可 如果输入不正确可以重复输入
     注册 要求用户有填写用户名密码，且用户名不能重复。其他信息随意

  2. 用户信息可以长期保存在服务器，保证下次登录可以使用 数据报自定

  3. 能够满足多个用户端程序同时操作的情况（多进程 多线程并发）

  4. 功能分为客户端和服务端，客户端主要发起请求，服务端处理请求，用户启动客户端即进入一级界面，
    客户端运行后即进入第一界面
     第一界面 ： 登录   注册   退出
  5. 登录成功后进入第二界面
     第二界面 ： 查词   查看历史记录  退出
     单词本：每行一个单词
             单词和解释之间一定有空格
             后面的单词一定比前面的大
      查单词：输入单词，显示单词意思，可以循环查询。输入 ## 表示退出查词

  6. 功能说明
     登录 ： 选择登录功能 输入用户名密码，如果成功进入第二界面，不成功保持在第一界面，提示失败原因
     注册 ： 选择注册功能，填写信息，成功后可以保持第一界面或者使用新注册用户直接完成登录到第二界面，失败提示失败原因
     第一界面退出 ： 直接退出客户端
     查词 ： 可以循环输入单词，显示出单词词义
             输入##表示查词结束回到第二界面。如果查询的词不存在则有相应提示

  	   *单词本 ： 每一行一个单词
  	              单词和解释之间一定有空格
  		            单词有序排列
              1. 文本查找  2.数据库查找

     历史记录： 选择查看历史记录即打印出用户的查询记录
                可以打印所有记录也可以打印最近10条。
                 name     word     time

   第二界面退出 ： 第二界面退出相当于注销，即退回到第一界面

项目分析
工作流程：创建数据库，存储数据　－－－》搭建通信框架，建立并发关系－－－》实现具体功能封装

1创建数据库存储数据
  dict
  user： id name  passwd
  hist:  id name  word  time
  words: id word interpret

  create database dict default charset=utf8;

  use dict;

  create table user(
  id int(4) primary key auto_increment,
  name varchar(32) not null ,
  passwd varchar(16) default '000000');

  create table hist(
  id int(4) auto_increment primary key,
  name varchar(32) not null,
  word varchar(20),
  time varchar(30));

  create table words (
  id int auto_increment primary key,
  word varchar(32) not null,
  interpret text not null);


sql = 'insert into words (word, interpret) values("%s","%s")'%(word, interpret)
select * from words


2.搭建基本框架
  服务器 创建套接字 ---》 创建父子进程 ---》 子进程等待处理客户端请求 ----》父进程继续就收下一个客户端连接

  客户端 创建套接字 --》 发起连接请求 --》 一级界面 --》 请求（登录，注册，退出） --》登录成功 进入二级界面
  ---》请求（查询

3.功能实现：
  注册
    客户端
      1.输入注册信息
      2.将注册信息发送给服务器
      3.得到服务器反馈

    服务器：
      1.接收请求
      2.判断是否允许注册
      3.将结果反馈给客户端
      4.注册信息插入数据库

  cookie 
  import getpass
  passwd = getpass.getpass() 
  功能：隐形输入


模块 :  socket 套接字
        pymysql/pymongo
	os   multiprocessing   threading   select

服务端

客户端

1.确定服务端和客户端分为哪些功能，每个功能要做什么工作

服务端 
main（）  ：  
创建套接字，父子进程，子进程处理客户端请求，父进程接受新的连接

login  接受客户端信息 
       数据库匹配
       返回结果

register  接受用户数据
          判断是否重复
          插入数据库返回注册成功
	  用户存在返回注册失败

query     接受用户单词
          通过数据库或者文件查找单词
          将单词结果返回给用户
	  如果没有查到返回相应信息
	  如果查词成功则插入历史记录

history   接受客户请求
          查询数据库返回历史记录
	  如果用户没有历史记录则返回信息

客户端 ：

main：  创建套接字 ----》 连接 ---》 打印一级界面

login   ：  输入用户名密码
            发送给服务端
	    接受返回结果，如果成功则跳转到二级界面
	    失败打印结果

register ： 输入用户名密码
            发送给服务端
	    接受返回结果

query ：   循环输入单词
           发送单词给服务端
	   接受结果并打印

history ：  发送请求 ---》 接受结果打印


2.确定建立什么样的数据表，表的结构，将表建立起来
  
  user  ： id  name  passwd
  hist  ： id  name  word   time
  words ： id  word  interpret
 
  create table user (id int auto_increment primary key,name varchar(32) not null,passwd varchar(16) default '000000');

  create table hist (id int auto_increment primary key,name varchar(32) not null,word varchar(64) not null,time varchar(64));
  
  create table words (id int auto_increment primary key,word varchar(64),interpret text); 


3. 如果要使用数据库查词则编程将单词本内容存入数据库

4. 搭建框架，实现通信 （创建套接字，设定结构，创建并发）

5. 实现具体框架优化和具体功能




1.确定技术点：
  什么并发，什么套接字，什么数据库，文件处理还是数据库查询？如果是数据库查询如何将单词存入数据库
  进程池 ----》 多进程   数据报ftp  mysql     数据库查询
创建数据库 创建表  导入文件数据

2.建立数据表
  建立几个表  每个表结构  表关系
  两个表 表一 存放注册用户  名字 密码   
         表二 用户的子表  存入查过的单词记录      
         表三 用户名字  查询过的单词

         用户信息          历史记录                     单词
         登录 注册         用户名  单词  时间           查单词
                           查单词时插入记录


              ----》 表用那些字段 什么类型的数据
              ----》
3.项目分析 仿照ftp和聊天室进行项目分析
4.搭建通信框架
5.分析有几个功能，如何封装，每个功能具体实现什么内容








