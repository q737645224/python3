复习
1. CSS 三种引入方式
	1. 行内 style属性
	2. 文档内嵌 style标签
	3. 外部样式表文件 <link rel="stylesheet" href="">
	行内优先级最高
	文档内嵌和外部样式表中涉及样式冲突，后来者居上
	浏览器默认样式优先级最低
2. CSS 选择器
	1. 标签选择器
		h1{

		}
	2. 类选择器
		.class{

		}
	3. ID 选择器
		#id{

		}
	4. 群组选择器
		div,#main,.c1,span{

		}
	5. 后代选择器
		div span{

		}
	6. 子代选择器
		div>span{

		}
	7. 伪类选择器
		超链接伪类选择器
			:link
			:visited
			:hover
			:active
		其他元素可以使用动态伪类
			:hover
			:active
		文本框和密码框
			:focus
	8. 选择器的优先级 看权值
		标签选择器    1
		类选择器	  10
		id选择器	  100
		行内样式      1000

		选择器的组合 （后代 子代）权值相加
3. CSS 常用属性
	width
	height
	color
	background-color
	font-size
	font-weight
	text-decoration
	vertical-align
4. 尺寸单位和颜色表示
	1. px
	2. %
	3. red
	4. rgb(255,0,0)
	5. rgba(255,0,0,.5)
	6. #ff0000
	7. #f00

--------------------------------------------
1. 尺寸 和 边框
	1. 尺寸属性
		width height
		用来改变元素的宽高大小
		取值 ：px为单位的数值，或者 %
		注意 ：
			块元素和行内块元素都可以设置宽高大小  div p h1 ol ul table form     img input
			行内元素不起作用,大小由内容自适应
	2. 溢出处理
		溢出属性:overflow   overflow : visible;
		取值 ：
			1. visible 默认值，可见
			2. hidden  隐藏，溢出部分隐藏不可见
			3. scroll  显示滚动条，溢出时滚动条可用
			4. auto    自动，当发生溢出时，产生滚动条并可用
2. 边框
	1. 边框实现  border : 30px dashed red;
		1. 边框简写
			通过一个属性为四个方向设置边框
			可以设置 边框的 宽度 样式 颜色
			属性 ：border
			取值 ：width style color (缺一不可)
				width : 像素为单位的数值，边框宽度
				style : 设置边框样式
					取值 ：
						solid  实线
						dashed 虚线
						dotted 点线
						double 双线
				color : 设置边框颜色
			特殊用法 ：
				取消边框 border : none;
		2. 单独设置某个方向的边框
			属性 ：
				 border-top
				 border-right
				 border-bottom
				 border-left
			取值 ：width style color
		3. 单独定义边框的宽度 样式 颜色 （了解）
			border-width:
			border-style:
			border-color:
		4. 边框实现三角标 border-top: 30px dashed transparent;
			1. 元素的宽、高尺寸为 0
			2. 元素分别设置四个方向的边框，宽度保持一致
			3. 保留指定方向的边框颜色可见，剩余边框颜色设置为 transparent 透明色
			4. 注意 ：
				想要实现三角标，必须设置四个方向的边框，缺少的话，边框会恢复成矩形
	2. 轮廓线 outline: width style coler;
		围绕在元素边框周围的线
		常见于 表单元素
		属性 outline
		取值 width style color
		一般多取消元素的默认轮廓线
		outline : none;
	3. 圆角边框 border-radius:30px(上下) 20px(左右)		
		设置元素的圆角
		属性 ：border-radius
		取值 ：
			1. 像素
			2. %  参照元素尺寸获取
		取值情况
			1. border-radius : 20px;
				一个值表示上右下左的圆角程度都是20px
			2. border-radius : 10px 20px 30px 40px;
				四个值分别代表四个方向的圆角程度
			3. border-radius : 10px 20px;
				两个值表示 1 3 对应，2 4 对应
				对角保持一致
			4. border-radius : 10px 20px 30px;
				第四个值与第二个值保持一致
			5. 改变元素形状，改成圆形
				border-radius : 50%;
	4. 边框阴影 (盒阴影)
		属性 ：box-shadow
		取值 ：
			offset-x  阴影的水平偏移距离
			offset-y  阴影的垂直偏移距离
			blur	  阴影的模糊程度，值越大越模糊
			spread    阴影的延伸距离
			color     阴影颜色
		注意 ：
			1. 浏览器坐标系，不管是窗口还是元素，都以左上角为原点，向右向下为X和Y轴的正方向
			2. spread 表示阴影的延伸距离，可以省略
			3. color 表示阴影颜色，默认为黑色
2. 盒模型 / 框模型
	1. 一切元素皆为框
		盒模型 ：定义元素在文档中实际占据的尺寸
		包含内容 ： 外边距 边框 内边距 元素尺寸
		默认情况下元素最终占据的尺寸大小 ：
			最终宽度 = 左右的外边距 + 左右的边框 + 左右的内边距 + 元素宽度
			最终高度 = 上下的外边距 + 上下的边框 + 上下的内边距 + 元素高度
	2. 外边距
		1. 元素边框与其他元素边框之间的距离
			设置元素与元素之间的距离
		2. 属性
			margin
			取值 ：可以是像素为单位的数值，也可以是%
			取值情况 ：
				1. margin : v1;
					一个值表示上右下左四个方向都设置外边距
				2. margin ：v1 v2;
					两个值表示上下的外边距为v1,左右外边距为v2
				3. margin : v1 v2 v3;
					上方的外边距为v1,下方的外边距为v3,左右外边距为v2
				4. margin ：v1 v2 v3 v4
					分别设置上右下左四个方向的外边距
			特殊用法：
				1. 清除元素的默认外边距
					margin : 0;
				2. 设置元素在其父元素中水平居中
					margin : 0 auto;
				3. 取值可以是正值也可以是负值
					如果给负值，表示元素位置微调
					margin : 10px 20px;
					margin : -10px 10px 20px -10px;
		3. 四个方向的外边距单据设置
			属性 ：
				margin-top
				margin-right
				margin-bottom
				margin-left
			取值 ：
				只给一个值，可以是像素值，也可以是%
		4. 页面中具有默认外边距的元素
			body p h1~h6 ul ol
	3. 内边距
		1. 元素的内容与元素边框之间的距离
		2. 语法
			属性 ：padding
			取值 ：像素值或%
			取值情况 ：
			padding: 10px; 上右下左四个方向的内边距
			padding: 10px 20px; 设置上下  左右的内边距
			padding：10px 20px 30px; 上 左右 下
			padding: 10px 20px 30px 40px; 上右下左
		3. 分别对四个方向的内边距做设置
			padding-top
			padding-right
			padding-bottom
			padding-left
		4. 具有默认内边距的元素
			ol ul 文本框 密码框 按钮 td
	4. box-sizing
		1. 作用 ：指定盒模型的计算方式
		2. 属性 : box-sizing
			取值 ：
				1. content-box 默认值
					元素的width height属性只规定元素内容区域的大小，如果元素设置内外边距，边框，则元素最终的尺寸要进行累加（参照盒模型公式）
					div{
						width:200px;
						height:200px;
						border:3px solid red;
						padding:10px;
						margin:20px;
					}
					最终宽度 200+3*2+10*2+20*2
					最终高度 200+3*2+10*2+20*2
				2. border-box
					元素的width height属性，设置的是包含边框，内边距和内容部分总共的尺寸
					div{
						width:200px;
						height:200px;
						border:3px solid red;
						padding:10px;
						margin:20px;
						box-sizing : border-box;
					}
					最终宽度 200+20*2
					width = border + padding + content;
	5. 元素显示设置
		属性 ：display
		作用 ：改变元素类型
		取值 ：
			1. block 转换为块元素
			2. inline 转换为行内元素
			3. inline-block 转换为行内块元素
			4. none 设置元素隐藏
		注意 ：
			block 设置元素显示
			none  设置元素隐藏

			a{
				display:inline-block;
				width：
				height:
			}
			<a></a>

3. 背景相关的属性
	1. 背景颜色
		属性 background-color
		取值 颜色值
		注意 
			 1. 背景颜色从边框位置开始绘制
			 2. 如果元素添加内边距，也会按照背景颜色进行填充
			 3. 所有元素默认背景颜色都为透明，新建窗口为白色并不是body的背景颜色，是窗口渲染的结果
	2. 背景图片
		属性 background-image
		取值 url("图片路径")
	3. 背景图片平铺显示
		如果背景图片尺寸小于元素尺寸。会自动对图片进行重复平铺，直到把元素铺满
		属性 background-repeat
		取值 
			1. repeat 默认值，沿水平和垂直方向平铺
			2. no-repeat 不重复平铺
			3. repeat-x 横向平铺
			4. repeat-y 纵向平铺
	4. 背景图片尺寸
		属性 background-size
		取值
			1. 像素值
			2. 百分比 采用当前元素的尺寸获取
			包含 width height 两个值
			------
			3. cover 将图片等比拉伸至完全覆盖元素，超出部分裁减掉
			4. contain 将图片等比拉伸至刚好被元素容纳，未填充到的部分不管
	5. 背景图片的位置
		默认情况下，背景图片从元素的左上角显示
		属性 ：background-position
		取值 ：
			1. x y
				以像素为单位的数值，使用空格隔开
				x : 背景图片水平偏移距离
					正值表示向右偏移
					负值表示向左偏移
				y : 背景图片的垂直偏移距离
					正值表示向下偏移
					负值表示向上偏移
			2. x% y%
				百分比参照元素尺寸获取
				1. 0% 0%
					图片显示在左上角
				2. 100% 100%
					背景图显示在右下角
				3. 50% 50%
					背景图显示在中间
			3. 使用方位值表示
				x y
				x ：left / center / right
				y : top  / center /bottom
				如果只设置一个方向上的关键字，另外一个方向默认是center
	6. 背景属性简写
		属性 ： background
		取值 ： color url() repeat position;
		注意 ：背景图片的尺寸大小需要单独设置
		et :
			div{
				background : red;
			}
			background : url();
			background : red url() no-repeat right bottom;






































