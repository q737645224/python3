1. 数组的API
	1. toString()
		作用 ：将数组中的元素转换为字符串返回
		返回值 ：字符串
		et :
			var arr = [1,2,3];
			var s = arr.toString();
			console.log(s); //"1,2,3"
	2. join()
		作用 ：将数组中的元素连接成一个字符串并返回
		返回值 ：字符串
		参数 ：可选，如果省略参数，默认元素之间使用,连接。
			可以给参数，指定元素之间的连接符
	3. reverse()
		作用 ：反转数组元素
		返回值 ：数组，会改变数组的原有结构
		et :
			var arr = [10,20,30];
			//[30,20,10]
			console.log(arr.reverse());
	4. sort()
		作用 ：对数组中元素进行排序
		返回值 ：数组，会改变数组原有结构
		参数 ：可选，自定义排序函数，
		       默认按照元素的Unicode码升序排列
		1. 升序的排序函数
			function sortAsc(a,b){
				return a-b;
			}
			arr.sort(sortAsc);
			解释 ：
			1. sortAsc函数接收两个参数，
				会自动将数组中相邻的两个元素传递给参数
			2. 如果返回值>0，交换两个元素的位置，否则不变
		2. 匿名函数作为排序函数，直接写在（）中
				arr.sort(function (a,b){ return b-a;});
2. 数组的进出栈操作
		栈结构 ：遵循先进后出原则
		栈操作可以快速操作数组中的头尾元素
		1. push(data)
				入栈操作，向数组的尾部添加元素，可以是一个或多个
				返回值 ：返回新数组的长度
				 et :
						arr[arr.length] = 'hello';
						arr.push("Hi");
						arr.push(10,20); //多个数据之间只用,隔开
		2. pop()
				出栈操作，删除数组尾部元素
				返回值 ：返回被删除的元素
		3. unshift()
				向数组头部添加一个或多个元素
				返回最终数组的长度
		4. shift()
				删除数组中头部元素
				返回被删除的元素
3. 二维数组
		数组中每个元素又是一个数组
		语法 ：
			var arr = [[10,5,3],[20,23],[30,13]];
			console.log(arr.length); //3
			//向二维数组中添加元素
			arr[1][2] = 50;
			//访问二维数组中元素
			console.log(arr[2][0]); //30
			et :
				var books = [
					["西游记","三国演义","红楼梦","水浒传"];
					["西游记","三国演义","红楼梦","水浒传"];
				];
		练习 ：随意录入一个数字，将数字转换成对应的二进制
						并输出
						10  转换二进制 ：除2取余,倒序排列余数
						10  / 2 = 5 .....0
						5   / 2	= 2 .....1
						2	/ 2 = 1 .....0
						1	/ 2 = 0 .....1
						10的二进制 1010  
						0 * 2（0）+ 1 * 2（1）+ 0 * 2（2） + 1 * 2（3）
JS中的内置对象
1. 对象 ： 由属性和方法组成，使用点语法访问内部属性和方法
		arr.length;
		arr.sort();
2. 对象分类 ：
		1. 内置对象 - ES 提供的
		2. BOM  浏览器对象模型
		3. DOM  文档对象模型
		4. 自定义对象 -  函数
3. 字符串 - String
		1. 声明字符串
			var str = "hello";
			var str2 = new String("字符串2");
			var str3 = String("字符串3");
			注意 ：只有内置对象再创建时可以省略new关键字
		2. 属性
			length ：表示字符串的长度
			var s = "你 好 坏";
			console.log(s.length); //5
		3. 常用方法
			1. 英文大小写转换
					1. toUpperCase()
						将英文字符串转换为全大写字母
					2. toLowerCase()
						将英文字符串转换为全小写字母
					注意 ：大小写转换操作会返回新的字符串，
								不影响原始字符串
					练习 ：
						1. 创建一个数组，初始化内容，由英文大小写字母
						和数字0-9组成
						2. 生成随机验证码 (多少位的验证码是可以设置的)
								使用随机下标访问数组元素
								随机数 ：Math.random(); [0,1)
								数组的下标范围 [0,length-1]
						3. 通过prompt 提示给用户，接收用户输入
						4. 判断用户输入的验证码是否匹配
								用户输入不区分大小写
								给出提示，验证码输入是否正确
			2. 获取指定位置的字符
					1. 获取指定位置的字符
							charAt(index);
							et :
							 var str = "hello world";
							 var s = str.charAt(6);
							 console.log(s);  //w
							返回指定位置的字符
					2. 获取指定位置字符对应的Unicode码
							charCodeAt(index);
							et :
								var str = "abc";
								var res = str.charCodeAt(1);
			3. 检索字符串
				1. indexOf(value,fromIndex)
						value : 要查找的字符串
						fromIndex : 从指定的下标位置开始向后查找，
							可选参数，默认为0
						返回值 ：返回value 第一次出现的下标位置，如果
								查找失败，返回 -1
				2. lastIndexOf(value,fromIndex)
						返回值 ：返回value最后一次出现的下标位置
			4. 截取字符串
					substring(startIndex,endIndex);
					返回指定下标范围内 startIndex - endIndex-1 
					对应的字符串
						练习 ：
							1. 从指定邮箱中截取用户名
									@之前的所有字符就是用户名
							2. 从制定的邮箱中截取服务商名称
									@之后的字符串
							3. 对身份证号操作，提取其中的生日
									1970年01月01日
									10062220031008563X
			5. 分割字符串
				split(seperator);
				将字符串按照指定字符分割，拆分成若干个小字符串
				返回数组，数组中存放小字符串
				练习 ：
					提交订单 会将购物车中的商品信息发送给后台
					1045_5&1034_2&3199_7
					获取商品信息
					商品ID   商品数量
					1045			5
					1034			2
					3199			7
			6. 模式匹配
					1. 作用 
							配合正则表达式完成字符串的查找和替换
					2. 正则表达式
							语法: /正则格式/修饰符
							修饰符 ：
										i : ignorecase 忽略大小写
										g : global 全局匹配
										m : multiple 多行匹配
							et :
								1. /\d{2,6}/g
								2. var str = "垃圾都要扔到垃圾箱里";
										/垃圾/g
					3. 字符串方法
							1. replace(subtr/regexp,replacement)
									作用 ：在一个字符串中，将substr或者是
										满足正则格式的字符串替换为 replacement
							2. match(substr/regexp)
								作用 ：按照指定的子字符串 substr
								或者正则表达式 匹配对应的字符串
								返回满足格式的字符串数组
							练习 ：
								Microsoft is a big company,microsoft's 
								color is red,has a MICROSOFT logo 
								like Microsoft
								1. 将所有的Microsoft 替换成 “微软”
								2. 输出替换了多少次

								
							
				



					

								


		
			







		