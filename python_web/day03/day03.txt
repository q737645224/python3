复习 ：
1. 表格
	1. 语法
		<table>
			<tr>
				<td></td>
			</tr>
		</table>
	2. 单元格合并
		colspan : 跨列合并
		rowspan :跨行合并
		注意 ：
			1. 这两个属性是 td 的属性
			2. 多余的单元格要删掉
	3. 表格结构
		<thead>
			<tr>
				<td></td>
			</tr>
		</thead>
		<tfoot></tfoot>
		<tbody></tbody>

		结构化标签只有在需要做行分组的时候再使用，默认情况下，表格中的内容都会自动添加到tbody中
2. 表单
	1. 语法
		<form action="" method=""></form>
	2. 表单控件
		1. 文本框和密码框
			<input type="text" name="" maxlength="" placeholder="">
			<input type="password" name="">
		2. 单选按钮和复选框
			<input type="radio" name="" value="" checked>
			<input type="checkbox" name="" value="">
		3. 按钮
			<input type="submit" value="" name="">
			<input type="reset">
			<input type="button" value="">
			按钮标签
			<button>按钮显示文本</button>
		4. 隐藏域和文件选择框
			<input type="hidden" value="" name="">
			<input type="file" name="">
-----------------------------------------------------

CSS
1. CSS 介绍
	CSS ：Cascading Style Sheet 层叠样式表
	作用 ：修饰和美化页面元素，实现网页排版布局
2. CSS 使用
	在 HTML 文档中使用 CSS 主要有三种方式
	1. 行内样式/内联样式
		特点 ：在具体的标签中使用style属性，引入CSS样式代码
		语法 ：
			<标签 style="CSS 样式声明">
			1. CSS 样式声明 / 语句
				1. 对当前元素添加样式
				2. 语法 ：
					CSS 属性 ：值；
			2. 注意 ： CSS 样式声明可以是多条
				<标签 style="属性:值；属性:值；"
		常见的CSS属性
			1. 设置字体大小
				1. 属性 font-size
				2. 取值 以像素为单位的数值，浏览器默认的字体大小是 16px
				et :
					<div style="font-size:20px;">CSS 介绍</div>
			2. 设置字体颜色
				1. 属性 color
				2. 取值 颜色的英文单词
				et :
					<div style="color:red;">使用</div>
			3. 设置背景颜色
				1. background-color
				2. 取值颜色的英文单词
	2. 文档内嵌 / 内部样式表
		特点 ：将CSS代码与具体的标签相分离，在HTML文档中使用<style></style>标签引入CSS代码
		语法 ：
			<style>
				选择器1
				选择器2
				选择器3
				...
			</style>
			选择器 ：
				1. 使用文档内嵌方式引入CSS样式表时，实现了结构与样式相分离，但是需要自己定义选择器来匹配文档中元素，为其应用样式
					作用 ： 匹配文档元素为其应用样式
				2. 语法 ：
					选择器实际上由两部分组成
					选择器（符）{
						属性 ：值；
						属性 ：值；
					}
					et :
						标签选择器/元素选择器：
						使用标签名作为选择符，匹配文档中所有的该标签，并应用样式
						p {
							color :green;
							font-size :20px;
						}
		注意 ：
			<style></style>可以书写在文档中的任意位置，但是基于样式优先的原则，一般写在<head></head>中
	3. 外链方式 / 外部样式表
		1. 定义外部的.css文件，在HTML中引入即可，真正实现文档与样式表的分离
		2. 语法：
			在外部的样式表中使用选择器定义样式；
			在HTML文档中使用<link>引入CSS文件
			et :
				<link rel="stylesheet" href="url">
3. 样式表特征
	1. 继承性
		大部分的CSS属性都是可以被继承的
		子元素或者后代元素可以继承父元素中的样式
		et :
			所有的文本属性都可以被继承
			块元素的宽度与父元素保持一致
	2. 层叠性
		允许为元素定义多个样式，共同起作用
		et :
			p{
				color:red;
				background-color:blue;
			}
	3. 样式表的优先级
		从低到高 ：
		1. 浏览器缺省设置 ：浏览器默认样式
		2. 文档内嵌/外链方式 ：在不发生样式冲突时，样式共同起作用；
		如果发生样式冲突，后来者居上，最后定义的样式最终显示
		3. 行内样式的优先级最高
4. CSS 选择器
	1. 作用 ：规范页面中哪些元素能够应用声明好的样式
		目的 ：匹配页面元素
	2. 详解
		1. 标签选择器 / 元素选择器
			特点 ：将标签名作为选择符，来匹配文档中所有的该标签，包含后代元素
			语法 ：
				标签名 {
					属性:值；
				}
			练习 ：
				新建文件 tag-selector.html
				创建超链接标签
				设置超链接文本色为红色
				取消下划线 text-decoration : none;
		2. 类选择器
			特点 ：通过元素的class属性值进行匹配
			语法 ：
				.c1{
					样式
				}
				<p class="c1">p文本</p>
				以英文.开头，跟上class属性值，中间没有空格
			练习 ：
				创建文件 class-selector
				创建几个元素 div p span h1
				使用类选择器为上述元素添加样式
					1. 文本大小为24px
					2. 背景颜色为橘色
					3. 文本斜体显示 font-style : italic;
			类选择器的结合使用
				1.标签名.类名
					中间没有空格
					表示在指定标签中匹配class属性值对应的元素
					p.c1{

					} 
					注意 ：标签名一定要写在前面
					et :
						.c1p 查找类名为c1p的元素
				2. .类名1.类名2 （不常用）
				3. 标签中使用两个类选择器的样式
					<p class="类名1 类名2">
		3. ID 选择器
			1. id 作用
				HTML中所有的元素都有一个id属性，主要用来表示该元素在文档中的标志，具有唯一性
			2. id 选择器
				通过元素的id属性值进行匹配
				语法 ：
					#id属性值{
						样式
					}
				注意 ：
					通常网页中外围的结构化标签，都使用id进行标识，具有唯一性
				et :
					#nav{

					}
					<div id="nav">导航条</div>
				练习 ：
					创建文件 id-selector
					创建div,设置id属性值为nav
					使用id选择器添加样式
						width ：100%；
						height : 50px;
						background-color: pink;
		4. 群组选择器
			1. 作用 ：为多个选择器设置共同的样式
			2. 语法 ：
				选择器1，选择器2，选择器3，{
					样式
				}
				div,h1,p{
					color : gray;
				}

				<div></div>
				<h1></h1>
				<p></p>
		5. 后代选择器
			1. 作用
				依托于元素的后代关系来匹配元素（既包含直接子元素，也包含后代元素）
			2. 语法
				选择器1 选择器2{

				}
				在选择器1对应的元素中匹配后代元素，后代元素需满足选择器2

				et :
					#nav span{

					}
					匹配#nav下的所有span元素
		6. 子代选择器
			1. 作用 ：依托元素的子代关系进行匹配，只匹配直接子元素
			2. 语法
				选择器1>选择器2 {

				}
				在选择器1对应的元素中匹配直接子元素，满足选择器2的要求
				et :
					#nav>ul>li{

					}

		7. 伪类选择器
			1. 分类 ：
				1. 超链接伪类选择器
				2. 动态伪类选择器
			2. 作用 ：
				主要是针对元素的不同状态去设置样式
				1. 超链接的不同状态
					访问前 :link
					访问后 :visited
					激活（鼠标点按不松）:active
					鼠标滑过 :hover
				2. 其他元素具备 
					鼠标滑过  :hover
					鼠标点按  :active
				3. 表单控件
					获取到焦点时的状态 :focus
					对文本框和密码框而言，当用户点击输入时，都视为获取焦点状态
			3. 伪类选择器需要与其他选择器结合使用，设置元素在不同状态下的样式
				a:link{
					color :black;
					text-decoration :none;
				}
			4. 注意 ：
				如果要给超链接添加四中状态下的样式，必须按照以下顺序书写伪类选择器
					:link
					:visited
					:hover
					:active
					简称 “爱恨原则 LoVe / HAte ”

	3. 选择器的优先级
		当多个选择器的样式同时应用到一个元素上时，要按照不同选择器的优先级来应用样式
		div{
			color:red;
		}
		#box{
			color:green;
		}
		.c1{
			color:blue;
		}
		<div id="box" class="c1">文本</div>
		判断选择器的优先级，主要看选择器的权重（权值）数值越大，优先级越高
		选择器          权值
		标签选择器       1
		类选择器/伪类    10
		id选择器         100
		行内样式         1000

		如果是复杂的选择器 （后代，子代），选择器最终的权值是各选择器权值之和
		<div id="nav">
			<ul>
				<li></li>
			</ul>
		</div>
		#nav li{ --101
			color: green;
		}
		div li{ --2
			color: red;
		}

5. 尺寸单位与颜色取值
	1. 尺寸单位
		1. px - 像素单位，默认单位
		2. %  - 参照父元素对应属性的值进行获取
		--------
		3. in -inch 英寸 1in = 2.54cm
		4. pt -磅 1pt = 1/72 in
		5. cm
		6. mm
		补充：
		7. em ：默认情况下，字体大小为16px,1em = 16px
	2. 颜色表示方式
		1. 英文单词
		2. rgb(r,g,b)表示颜色
			 每一种三原色的取值范围：0 - 255
			et :
				红色 ：rgb(255,0,0);
				黑色 ：rgb(0,0,0);
				白色 ：rgb(255,255,255);
		3. rgba(r,g,b,alpha)
			设置颜色，还可以调整透明度
			三原色的取值范围 0 - 255
			alpha 透明度的取值  0 - 1
				0 ：表示透明
				1 ：表示不透明
				取小数表示半透明，整数部分的0可以省略不写
				0.5  / .5
		4. 十六进制表示颜色
			三原色 取值 0 - 255
			转换为十六进制
			十六进制取值范围 0-9 a-f
			表示颜色
				1. 长十六进制 6位表示方法
					每两位为一组，代表一种三原色
					表示红色 
						#ff0000
					黑色 #000000
					白色 #ffffff
					其他颜色 ：#643a1f
				2. 短十六进制 3位表示方式
					浏览器会自动对每一位进行重复补全，最终补全为长十六进制
					红色 ：#f00 ->#ff0000
					黑色 ：#000
					白色 ：#fff
6. 元素分类
	HTML中标签分为
		1. 块元素
			特点 ：
				1. 独占一行，不与其他元素共行显示
				2. 可以手动设置宽高
			et : div h1 p ul ol table form
		2. 行内元素
			特点 ：
				1. 可以与其他元素或者文本共行显示
				2. 不能手动设置宽高，元素的大小由内容决定
			et : span i b label u s sub sup
		3. 行内块元素
			特点 ：
				既可以与其他元素共行显示，也可以手动设置宽高
			et : img input
			属性 ：
				可以通过 vertical-align设置行内块元素左右元素与其的垂直对齐方式
				取值 ： top / middle / bottom
			注意 ：vertical-align只在行内块元素中使用
			
7. 行内元素是可以共行显示的，但是如果代码中出现了换行，页面最终效果上，行内元素之间会有空隙

		<body>
			<div id="nav">
				<ul>  --div的直接子元素
					<li>首页</li>-div的间接子元素
					<li>数码</li>
				</ul>
				<span></span--div的直接子元素
				<ul>
					<li>
						首页
						<ol>
							<li></li>
						</ol>
					</li>
				</ul>
			</div>
		<body>








