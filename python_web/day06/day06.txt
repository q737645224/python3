1. 定位布局
	1. 属性 position
	2. 取值
		1. static 默认值 按照文档流布局
		2. relative 相对定位
		3. absolute 绝对定位
		4. fixed	固定定位
		注意 ：只有元素的position属性设置为 relative / absolute / fixed,才认为元素是“已经定位的元素”
	3. 偏移属性
		属性 ： top /right / bottom/ left
		作用 ：配合已定位的元素实现位置移动
		取值 ：像素值
			top : 以元素的上边界为基准移动元素
			right : 以元素的右边界为基准移动元素
			bottom : 以元素的底边界为基准移动元素
			left : 以元素的左边界为基准移动元素
2. 定位方式
	1. 相对定位
		position ：relative;
		元素采用相对定位时，会参照它在文档中原本的位置进行偏移
	2. 绝对定位（重点）
		position : absolute;
		特点 ：
			1. 绝对定位的元素，会脱离文档流，元素在文档中不占位
			2. 绝对定位的元素会参照一个离他最近的并且已经定位的祖先元素进行偏移
			3. 如果元素没有已定位的祖先元素，元素会参照body(浏览器窗口左上角)的位置进行偏移
		注意 ：
			1. 元素一旦绝对定位，就可以设置宽高了
			2. 经常使用 “父相子绝”的方式实现页面布局
				父元素采用相对定位，子元素采用绝对定位
			3. 浮动和绝对定位都可以实现元素脱流，采用浮动+外边距调整元素位置 等价于 绝对定位+偏移属性，浮动更常见于外围结构标签，做网页整体布局时使用，绝对定位更常用于内部元素的调整
			4. 浮动和相对定位可以共存的，设置的相对定位只是为了辅助内部子元素的定位布局
	3. 堆叠次序调整
		1. 已定位的元素堆叠在一起时的排列顺序
		2. 语法
			属性 ：z-index
			取值 ：无单位的数值，默认为0，数值越大越靠上
		3. 注意
			1. 如果元素z-index属性值相同，后来者居上
			2. 父子元素都设置z-index，永远是子元素在上，不受z-index影响
			3. z-index属性只能用在已定位的元素上
				position : relative / absolute / fixed
	4. 固定定位
		1. 固定定位可以使元素固定在浏览器窗口的某个位置，不会随网页内容滚动而滚动
		2. 语法 ：
			属性 ：position
			取值 ：fixed
			配合偏移属性实现元素位置的固定
		3. 注意 ：
			1. 固定定位的元素永远是参照浏览器窗口进行定位的
			2. 固定定位的元素都会变成块元素
3. 显示方式
	1. 作用 ：决定元素以何种方式显示在网页中
	2. 属性 ：display
		取值 ：
			1. none  设置元素隐藏，隐藏之后不占位
			2. block 设置元素显示，或者转换元素类型，将元素转换为块元素
			3. inline 转换为行内元素
			4. inline-block 转换为行内块元素
4. 显示效果
	1. 属性 ：visibility
	2. 取值 ：
		1. visible 默认值，表示显示
		2. hidden  元素隐藏，仍然在文档中占位

	-----------------------------

	1. 属性 ：opacity 设置元素透明度
	2. 取值 ：0（透明） ~ 1 （不透明）
		注意 ：
			1. 元素设置opacity属性，所有内容（背景颜色，文本颜色）都会实现半透明效果
			2. 子元素会继承父元素中半透明效果
			3. 如果父子元素都设置了opacity，子元素最终的效果是在父元素半透明的基础上再进行半透明，
				子元素最终效果 = 父元素opacity * 本身opacity

	--------------------------------------
	1. 设置垂直对齐方式
		属性 ：vertical-align
		取值 ：top / middle / bottom
		注意 ：
			可以用在行内元素上，更常见于为行内块元素设置vertical-align。调整行内块元素左右内容与它的对齐方式

	-----------------------------
	2. 光标显示
		作用 ：改变鼠标悬停在元素上时的显示外观
		属性 ：cursor
		取值 ：
			1. default 默认值
			2. pointer 显示为小手形状
			3. text	   显示为 I 普通文本
			4. crosshair 显示为 +
5. 列表属性
	1. 列表本身是块级元素，自带内外边距，带有项目符号
	2. 属性
		1. 属性 : list-style-type
			设置项目符号
			取值 ：
				1. none （取消项目符号）
				2. disc  实心原点
				3. circle 空心圆点
				4. square 实心方块
				...
		-----了解-----
		2. 设置项目符号为图片
			属性 ：list-style-image
			取值 ：url("图片路径")
		3. 设置项目符号的位置
			属性 ：list-style-position
			取值 ：inside / outside(默认）
			设置项目符号出现在内容框的外部还是内部
		4. 必须掌握
			属性简写
			list-style : none; 常用来取消列表项目符号
6. 转换属性
	1. 主要是用来改变元素在页面中的位置，尺寸，角度
	2. 语法
		属性 ：transform
		取值 ：转换函数
		注意 ：多个转换函数之间使用空格隔开

		1. 转换原点
			转换原点实际上就是元素转换操作的基准点
			属性 ：transform-origin
			取值 ：x y;
				表示以元素左上角为原点选取旋转原点的坐标
				1. 可以使用像素值
				2. 可以使用百分比
				3. 可以使用方位值
					top /center / bottom
					left /center /right
				默认以元素的中心点作为转换的基准点
		2. 转换函数
			1. 平移变换
				1. 改变元素在网页中的位置
				2. 属性 transform
					取值 ：translate(x,y)
						x 表示元素在水平方向上平移的距离
						y 表示元素在垂直方向上平移的距离
						正值表示元素向右 / 下移动
						负值相反
					其他情况
						1. translateX(value)
							指定元素沿水平方向位移
						2. translateY(value)
							指定元素沿垂直方向位移
						3. translate(value)
							等价于translateX(value)
			2. 缩放变换
				改变元素在页面中的大小
				属性 ：transform
				取值 ：scale(value)
					value为无单位的数值，表示缩放比例
					默认值是1 正常比例显示
					value > 1 会等比放大
					0 < value < 1 等比缩小
					value < 0 元素会反转
				其他情况
					1. scaleX(v)	
						横向缩放
					2. scaleY(v)
						垂直缩放
			3. 旋转变换
				元素旋转一定角度显示
				属性 ：transform
				取值 : rotate(ndeg) 二维转换
					表示元素按照指定的角度进行旋转
					正值 表示顺时针
					负值 表示逆时针
				------------------
				3D变换
					rotateX(ndeg) 沿X轴翻转
					rotateY(ndeg) 沿Y轴旋转
			4. 注意 ：
				1. 旋转原点会影响转换效果
				2. 元素如果涉及旋转操作，会连带坐标轴一起旋转,影响后面的位移操作
					translate(x,y)
						沿坐标轴进行移动

















