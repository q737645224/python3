库操作：

创建库：
create database 库名;
查看所有库：
show databases;
删除库：
drop database 库名;
查看库的字符集：
show create database 库名;
进入库：
use 库名;
查看当前库：
show database();


表操作：

创建表：
create table 表名(字段名 字段类型)engine=InnoDB/Myisam character set 'utf8';
查看当前库内所有表：
show tables;
删除表：
drop table 表名;
查看表的字符集：
show create table 表名;
查看表结构：
desc 表名;
查看表的内容（返回内容）：
select 字段名1,字段名2,...(*代表全部字段) from 表名;

表字段操作：

添加表字段：
alter table 表名 add 要添加的字段名 字段类型 (默认添加到末尾)
(在末尾加first代表将此字段加在最前)
alter table 表名 add 要添加的字段名 字段类型 first;
(在末尾加after 字段名n代表将此字段加在字段n后)
alter table 表名 add 要添加的字段名 字段类型 after 表名;
更改表字段类型：
alter table 表名 modify 要修改的字段名 新字段类型
删除表字段：
**alter table 表名 drop 要删除的字段名
修改表名:
alter table 表名 rename 新表名
修改字段名：
**alter table 表名 change 原字段名 新字段名 类型

表记录操作：

添加表记录：
insert into 表名(字段名1,字段名2,...不加默认全部) values(值1,值2,...),(值1,值2,...);
删除表记录：
delete from 表名 where 条件;(不加条件删除所有记录)
修改表记录：
update 表名 set 字段名1=值1,字段名2=值2,... where 条件;(不加条件修改所有记录)


数据类型(字段类型)：

1、数值类型
  1、整数类型
    1、int 大整型(11位4个字节)
    2、tinyint 微小整型(unsigned 0~255)(默认signed -128~127)
    3、bigint 极大整型(8个字节)
    4、smallint 小整型(2个字节)
  2、浮点型
    1、float(m,n)(共m位，有n位小数，m<=7)
    2、decimal(m,n)(共m位，有n位小数，m<=28)
2、字符类型
  1、char(m)定长，性能高，浪费存储空间，字符长度不能超过m
  2、varchar(m)变长，性能低，节约存储空间，字符长度不能超过m
3、枚举类型
  1、enum('值1','值2',...)单选
  2、set('值1','值2',...)多选，插入时'值1,值2,...'
4、时间日期类型
  1、now():返回最新的时间日期(年-月-日 时:分:秒)year(时间日期):返回年
  2、curdata():返回最新的日期(年-月-日)data(时间日期):返回日期
  3、curtime():返回最新的时间(时:分:秒)time(时间日期):返回时间
  4、时间单位 (inserval)
    一年：1 year
    一月：1 month
    一日：1 day
    一小时：1 hour
    一分钟：1 minute
    一周：1 week

索引：
查看索引：show index 表名\G;

普通索引：无约束(默认约束default\非空约束not null default)
创建表时：
在表名后加index(字段名),index(字段名);
create table t2(index(id int))....
已有表时：
create index 索引名 on 表名(字段名);
删除索引：
drop index 索引名 on 表名;

唯一索引：不能重复
创建表时：
在表名后加unique index(字段名),unique index(字段名);
已有表时：
create unique index 索引名 on 表名(字段名);
删除索引：
drop index 索引名 on 表名;

键：
主键：一个表内只有一个，非空，不重复
创建表时添加主键：
在字段名1的数据类型后加primary key(加上auto_increment自增长属性)
create table t1(id int primary key auto_increment)auto_icrement=10 ..charac~~
已存在字段添加主键：
alter table 表名 modify 字段名1 字段类型 not null primary key auto_increment;

在表字段添加/修改id字段名且数据为空的主键；
alter table 表名 add 字段名1 字段类型 not null primary key auto_increment；
alter table 表名 modify 字段名1 字段类型 not null primary key auto_increment；

已有表id字段数据为空添加主键，先添加一个普通索引
create index 索引名 on 表名(字段名);
alter table 表名 modify 字段名1 字段类型 not null;
alter table 表名 modify 字段名1 字段类型 auto_increment;
alter table 表名 add primary key(字段名1)；

删除主键时：
alter table 表名 modify 字段名1 字段类型;去掉自增长属性
alter table 表名 drop primary key;因为主键只有一个

外键：
添加外键：要注意参考字段和被参考字段类型是否相同
在数据类型末尾加foreign key(参考字段) references 主表名(被参考字段) on delete 级联动作 on update 级联动作;
级联动作有(cascade)
级联动作有(set null)
已有表时：要注意参考字段数量是否被参考字段数量相同
alter table 表名 add foreign key(参考字段) references 主表名(被参考字段) on delete 级联动作 on update 级联动作;

删除外键：
alter table 表名 drop foreign key 外键名;
查看外键名：
show create table 表名;

数据导入：
load data infile'文件名(一般情况下是/etc/lib/mysql)'
into table 表名
fields terminated by '分隔符'
lines terminated by '\n'
(.csv文件的分隔符是',')

数据导出：
select 字段名1,字段名2,... from 表名
into outfile '文件名'
fields terminated by '分隔符'
lines terminated by '\n'

数据调优:
  1、选择合适的存储引擎
      1、读操作用 : MyIsam
      2、写操作多 : InnoDB
  2、创建索引在SELECT、WHERE、ORDER BY常涉及的字段建立索引
  3、SQL语句优化
    1、where条件判断尽量不使用 != ,否则放弃索引全表扫描
    2、尽量避免NULL值判断,否则放弃索引全表扫描
       优化前：select id from t1 where id is null;
       优化后：在 id 字段上设置默认值0,确保id字段没有NULL值
               select id from t1 where id=0;
    3、尽量避免用 or 来连接条件,否则放弃索引全表扫描
       优化前：select id from t1 where id=10 or id=20;
       优化后：
	       select id from t1 where id=10
	       union all
	       select id from t1 where id=20;
    4、模糊查询尽量避免使用前置%,否则放弃索引全表扫描
       select name from t1 where name like "c%";

    5、尽量避免使用in 和 not in,否则放弃索引全表扫描
       优化前：select id from t1 where id in(1,2,3,4);
       优化后：select id from t1 where id between 1 and 4;

    6、尽量避免使用 * ,用具体的字段代替*,不要返回用不到的任何字段

聚合和执行顺序：
聚合函数
  avg(...) max(...) min(...) sum(...) 
  count(字段名) #NULL值不会被统计

执行顺序:
3.select 字段名/聚合函数/* from 表名
1.where 条件
2.group by 分组
  语法 : group by 字段名
4.having
  语法 : select ... from group by ... having 聚合函数显示列 
5.order by
  order by 字段名/聚合函数 desc 降序
6.limit 
  语法 : limit (m,n) m代表从哪里开始并+1、因从0算起，n为总条数
  分页概念 ：
  假如第m页每页n条 : (m-1)*n,n == (6-1)*2,2






